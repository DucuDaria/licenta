{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daria\\\\OneDrive\\\\Desktop\\\\Licenta 2.0\\\\licenta\\\\frontend\\\\src\\\\components\\\\ProductsList.js\",\n  _s = $RefreshSig$();\nimport '../styles/ProductsList.css';\nimport React, { useEffect, useState } from 'react';\nimport { getAllProduse } from '../services/api';\nimport Paginator from './Paginator';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsList = () => {\n  _s();\n  const [toateProdusele, setToateProdusele] = useState([]); // 🟡 toate produsele din API\n  const [produse, setProduse] = useState([]); // 🔵 doar pagina curentă\n  const [paginaCurenta, setPaginaCurenta] = useState(1);\n  const [dimensiunePagina, setDimensiunePagina] = useState(10);\n  const [filtru, setFiltru] = useState('');\n  const [sort, setSort] = useState('denumire_asc');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProduse = async () => {\n      try {\n        const toate = await getAllProduse();\n        setToateProdusele(toate);\n      } catch (err) {\n        console.error('Eroare la încărcarea produselor:', err);\n      }\n    };\n    fetchProduse();\n  }, []);\n  useEffect(() => {\n    let filtrate = [...toateProdusele];\n    if (filtru) {\n      filtrate = filtrate.filter(p => p.denumire.toLowerCase().includes(filtru.toLowerCase()));\n    }\n    if (sort === 'denumire_asc') {\n      filtrate.sort((a, b) => a.denumire.localeCompare(b.denumire));\n    } else if (sort === 'denumire_desc') {\n      filtrate.sort((a, b) => b.denumire.localeCompare(a.denumire));\n    }\n    const start = (paginaCurenta - 1) * dimensiunePagina;\n    const end = start + dimensiunePagina;\n    setProduse(filtrate.slice(start, end));\n  }, [toateProdusele, paginaCurenta, dimensiunePagina, filtru, sort]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List\\u0103 Produse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Caut\\u0103 dup\\u0103 denumire...\",\n      onChange: e => {\n        setFiltru(e.target.value);\n        setPaginaCurenta(1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Denumire\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSort('denumire_asc'),\n              children: \"\\u2B06\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSort('denumire_desc'),\n              children: \"\\u2B07\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pre\\u021B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: produse.map(produs => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: produs.denumire\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [produs.pret, \" lei\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, produs.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginator, {\n      onPageChange: pagina => setPaginaCurenta(pagina),\n      onPageSizeChange: size => {\n        setDimensiunePagina(size);\n        setPaginaCurenta(1);\n      },\n      totalRecords: toateProdusele.filter(p => p.denumire.toLowerCase().includes(filtru.toLowerCase())).length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/produse'),\n        children: \"\\xCEnapoi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductsList, \"Wl2uP+AdOAVPmOBymNfxVQd5CXA=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductsList;\nexport default ProductsList;\nvar _c;\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"names":["React","useEffect","useState","getAllProduse","Paginator","useNavigate","jsxDEV","_jsxDEV","ProductsList","_s","toateProdusele","setToateProdusele","produse","setProduse","paginaCurenta","setPaginaCurenta","dimensiunePagina","setDimensiunePagina","filtru","setFiltru","sort","setSort","navigate","fetchProduse","toate","err","console","error","filtrate","filter","p","denumire","toLowerCase","includes","a","b","localeCompare","start","end","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","map","produs","pret","id","onPageChange","pagina","onPageSizeChange","size","totalRecords","length","_c","$RefreshReg$"],"sources":["C:/Users/daria/OneDrive/Desktop/Licenta 2.0/licenta/frontend/src/components/ProductsList.js"],"sourcesContent":["import '../styles/ProductsList.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllProduse } from '../services/api';\r\nimport Paginator from './Paginator';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ProductsList = () => {\r\n  const [toateProdusele, setToateProdusele] = useState([]); // 🟡 toate produsele din API\r\n  const [produse, setProduse] = useState([]); // 🔵 doar pagina curentă\r\n  const [paginaCurenta, setPaginaCurenta] = useState(1);\r\n  const [dimensiunePagina, setDimensiunePagina] = useState(10);\r\n  const [filtru, setFiltru] = useState('');\r\n  const [sort, setSort] = useState('denumire_asc');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProduse = async () => {\r\n      try {\r\n        const toate = await getAllProduse();\r\n        setToateProdusele(toate);\r\n      } catch (err) {\r\n        console.error('Eroare la încărcarea produselor:', err);\r\n      }\r\n    };\r\n    fetchProduse();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let filtrate = [...toateProdusele];\r\n\r\n    if (filtru) {\r\n      filtrate = filtrate.filter(p =>\r\n        p.denumire.toLowerCase().includes(filtru.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (sort === 'denumire_asc') {\r\n      filtrate.sort((a, b) => a.denumire.localeCompare(b.denumire));\r\n    } else if (sort === 'denumire_desc') {\r\n      filtrate.sort((a, b) => b.denumire.localeCompare(a.denumire));\r\n    }\r\n\r\n    const start = (paginaCurenta - 1) * dimensiunePagina;\r\n    const end = start + dimensiunePagina;\r\n    setProduse(filtrate.slice(start, end));\r\n  }, [toateProdusele, paginaCurenta, dimensiunePagina, filtru, sort]);\r\n\r\n  return (\r\n    <div className='products-list'>\r\n      <h1>Listă Produse</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Caută după denumire...\"\r\n        onChange={(e) => {\r\n          setFiltru(e.target.value);\r\n          setPaginaCurenta(1);\r\n        }}\r\n      />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Denumire\r\n              <button onClick={() => setSort('denumire_asc')}>⬆</button>\r\n              <button onClick={() => setSort('denumire_desc')}>⬇</button>\r\n            </th>\r\n            <th>Preț</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {produse.map((produs) => (\r\n            <tr key={produs.id}>\r\n              <td>{produs.denumire}</td>\r\n              <td>{produs.pret} lei</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <Paginator\r\n        onPageChange={(pagina) => setPaginaCurenta(pagina)}\r\n        onPageSizeChange={(size) => {\r\n          setDimensiunePagina(size);\r\n          setPaginaCurenta(1);\r\n        }}\r\n        totalRecords={\r\n          toateProdusele.filter(p =>\r\n            p.denumire.toLowerCase().includes(filtru.toLowerCase())\r\n          ).length\r\n        }\r\n      />\r\n\r\n      <div className='footer'>\r\n        <button onClick={() => navigate('/produse')}>Înapoi</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}